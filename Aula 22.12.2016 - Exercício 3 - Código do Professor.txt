Código do Professor

Programa INCLUDE

* Declarando uma estrutura
TABLES: zylivro_inst.

* Tabela Interna de Saída
TYPES: BEGIN OF st_saida,
         codliv    TYPE zylivro_inst-codliv,
         descliv   TYPE zylivro_inst-descliv,
         valliv    TYPE zylivro_inst-valliv,
         moeda     TYPE zylivro_inst-moeda,
         nomeautor TYPE zyautor_inst-nomeautor,
         sexo      TYPE zyautor_inst-sexo,
         descgen   TYPE zygenero_inst-descgen,
       END OF st_saida.

* Workarea para loop
DATA: wa_saida  TYPE st_saida,
      wa_livro  TYPE zylivro_inst,
      wa_autor  TYPE zyautor_inst,
      wa_genero TYPE zygenero_inst.

* Tabela interna
* Padrão - A Palavra "STANDARD" é opcional, ou seja, "TYPE STANDARD TABLE OF".
DATA: it_saida  TYPE TABLE OF st_saida,
      it_livro  TYPE TABLE OF zylivro_inst,
      it_autor  TYPE TABLE OF zyautor_inst,
      it_genero TYPE TABLE OF zygenero_inst.




Programa Principal



REPORT zyexibelivros_inst.

INCLUDE zyvarlivros_inst.

SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME TITLE text-002.
PARAMETERS: p_join TYPE c RADIOBUTTON GROUP c1,
            p_all  TYPE c RADIOBUTTON GROUP c1 DEFAULT 'X'.
SELECTION-SCREEN END OF BLOCK b2.

SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-001.
SELECT-OPTIONS: so_liv FOR zylivro_inst-codliv.
SELECTION-SCREEN END OF BLOCK b1.

START-OF-SELECTION.

  IF p_join = 'X'.

    SELECT a~codliv a~descliv a~valliv a~moeda
           b~nomeautor b~sexo c~descgen
    INTO TABLE it_saida
    FROM zylivro_inst AS a INNER JOIN zyautor_inst AS b
    ON a~codautor = b~codautor
    INNER JOIN zygenero_inst AS c
    ON a~codgen = c~codgen
      WHERE a~codliv IN so_liv.

    IF sy-subrc = 0.
      LOOP AT it_saida INTO wa_saida.
        WRITE: / wa_saida-codliv,
                wa_saida-descliv(20),
                wa_saida-valliv,
                wa_saida-moeda,
                wa_saida-nomeautor,
                wa_saida-sexo,
                wa_saida-descgen.
        CLEAR wa_saida.
      ENDLOOP.
    ELSE.
      WRITE: 'Não foram encontrados registros.'.
    ENDIF.

  ELSEIF p_all = 'X'.

    SELECT * FROM zylivro_inst
      INTO TABLE  it_livro
      WHERE codliv IN so_liv.

    IF it_livro IS NOT INITIAL.		"Se a tabela possui valores diferentes dos valores iniciais(default)
      SELECT * FROM zyautor_inst
        INTO TABLE it_autor
        FOR ALL ENTRIES IN it_livro		"Para todas as entradas de "it_livro" que possuem correspondência em "zyautor_inst"
        WHERE codautor = it_livro-codautor.	"Baseando-se na seguinte condição: "codautor(zyautor_inst)" = "codautor(it_livro)"

      SELECT * FROM zygenero_inst
        INTO TABLE it_genero
        FOR ALL ENTRIES IN it_livro		"Para todas as entradas de "it_livro" que possuem correspondência em "zygenero_inst"
        WHERE codgen = it_livro-codgen.		"Baseando-se na seguinte condição: "codgen(zygenero_inst)" = "codgen(it_livro)"
    ENDIF.

    LOOP AT it_livro INTO wa_livro.

      wa_saida-codliv = wa_livro-codliv.
      wa_saida-descliv = wa_livro-descliv.
      wa_saida-valliv  = wa_livro-valliv.
      wa_saida-moeda  = wa_livro-moeda.

      READ TABLE it_autor INTO wa_autor
                          WITH KEY codautor = wa_livro-codautor.
      IF sy-subrc = 0.
        wa_saida-nomeautor = wa_autor-nomeautor.
        wa_saida-sexo = wa_autor-sexo.
      ENDIF.

      READ TABLE it_genero INTO wa_genero
                           WITH KEY codgen = wa_livro-codgen.
      IF sy-subrc = 0.
        wa_saida-descgen = wa_genero-descgen.
      ENDIF.

      APPEND wa_saida TO it_saida.
      CLEAR wa_saida.

    ENDLOOP.

    LOOP AT it_saida INTO wa_saida.
      WRITE: / wa_saida-codliv,
              wa_saida-descliv(20),
              wa_saida-valliv,
              wa_saida-moeda,
              wa_saida-nomeautor,
              wa_saida-sexo,
              wa_saida-descgen.
      CLEAR wa_saida.
    ENDLOOP.

  ENDIF.
