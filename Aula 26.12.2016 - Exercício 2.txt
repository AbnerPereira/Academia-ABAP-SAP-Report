Programa INCLUDE

* Declarando uma estrutura
TABLES: zylivro_al06.

* Tabela Interna de Saída
TYPES: BEGIN OF st_saida,
         codliv    TYPE zylivro_al06-codliv,
         descliv   TYPE zylivro_al06-descliv,
         valliv    TYPE zylivro_al06-valliv,
         moeda     TYPE zylivro_al06-moeda,
         nomeautor TYPE zyautor_al06-nomeautor,
         sexo      TYPE zyautor_al06-sexo,
         descgen   TYPE zygenero_al06-descgen,
       END OF st_saida.

* Workarea para loop
DATA: wa_saida  TYPE st_saida,
      wa_livro  TYPE zylivro_al06,
      wa_autor  TYPE zyautor_al06,
      wa_genero TYPE zygenero_al06.

* Tabela interna
* Padrão - A Palavra "STANDARD" é opcional, ou seja, "TYPE STANDARD TABLE OF".
DATA: it_saida  TYPE TABLE OF st_saida,
      it_livro  TYPE TABLE OF zylivro_al06,
      it_autor  TYPE TABLE OF zyautor_al06,
      it_genero TYPE TABLE OF zygenero_al06.



Programa Principal


REPORT zyexibelivros_al06.
INCLUDE zyvarlivros_al06.

SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME TITLE text-002.
PARAMETERS: p_join TYPE c RADIOBUTTON GROUP c1,
            p_all  TYPE c RADIOBUTTON GROUP c1 DEFAULT 'X'.
SELECTION-SCREEN END OF BLOCK b2.

SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-001.
SELECT-OPTIONS: so_liv FOR zylivro_al06-codliv.
SELECTION-SCREEN END OF BLOCK b1.

START-OF-SELECTION.

  IF p_join = 'X'.
    "Evitar reescrita de código.
    PERFORM executa_join.
  ELSEIF p_all = 'X'.
    "Evitar reescrita de código.
    PERFORM executa_for_all_entries.
  ENDIF.
*&---------------------------------------------------------------------*
*&      Form  EXIBELIVRO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM exibelivro .
  LOOP AT it_saida INTO wa_saida.
    WRITE: / wa_saida-codliv,
            wa_saida-descliv(20),
            wa_saida-valliv,
            wa_saida-moeda,
            wa_saida-nomeautor,
            wa_saida-sexo,
            wa_saida-descgen.
    CLEAR wa_saida.
  ENDLOOP.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  EXECUTA_JOIN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM executa_join .
  SELECT a~codliv a~descliv a~valliv a~moeda
         b~nomeautor b~sexo c~descgen
  INTO TABLE it_saida
  FROM zylivro_al06 AS a INNER JOIN zyautor_al06 AS b
  ON a~codautor = b~codautor
  INNER JOIN zygenero_al06 AS c
  ON a~codgen = c~codgen
    WHERE a~codliv IN so_liv.

  IF sy-subrc = 0.

    "Evitar reescrita de código.
    PERFORM exibelivro.
  ELSE.
    WRITE: 'Não foram encontrados registros.'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  EXECUTA_FOR_ALL_ENTRIES
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM executa_for_all_entries .

  PERFORM executa_selecao.
  PERFORM consiste_dados.
  "Evitar reescrita de código.
  PERFORM exibelivro.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  EXECUTA_SELECAO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM executa_selecao .
  SELECT * FROM zylivro_al06
    INTO TABLE  it_livro
    WHERE codliv IN so_liv.

  IF it_livro IS NOT INITIAL.
    SELECT * FROM zyautor_al06
      INTO TABLE it_autor
      FOR ALL ENTRIES IN it_livro
      WHERE codautor = it_livro-codautor.

    SELECT * FROM zygenero_al06
      INTO TABLE it_genero
      FOR ALL ENTRIES IN it_livro
      WHERE codgen = it_livro-codgen.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CONSISTE_DADOS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM consiste_dados .
  LOOP AT it_livro INTO wa_livro.

    wa_saida-codliv = wa_livro-codliv.
    wa_saida-descliv = wa_livro-descliv.
    wa_saida-valliv  = wa_livro-valliv.
    wa_saida-moeda  = wa_livro-moeda.

    READ TABLE it_autor INTO wa_autor
                        WITH KEY codautor = wa_livro-codautor.
    IF sy-subrc = 0.
      wa_saida-nomeautor = wa_autor-nomeautor.
      wa_saida-sexo = wa_autor-sexo.
    ENDIF.

    READ TABLE it_genero INTO wa_genero
                         WITH KEY codgen = wa_livro-codgen.
    IF sy-subrc = 0.
      wa_saida-descgen = wa_genero-descgen.
    ENDIF.

    APPEND wa_saida TO it_saida.
    CLEAR wa_saida.

  ENDLOOP.
ENDFORM.

